{"ast":null,"code":"var _jsxFileName = \"/home/tarun/project/frontend/src/pages/MessagesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"../styles/messages.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst MessagesPage = () => {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    if (user_id) {\n      axios.get(`http://localhost:5000/api/users/${user_id}`).then(res => setUsers(res.data)).catch(err => console.error(\"Error fetching users:\", err));\n    }\n  }, [user_id]);\n  useEffect(() => {\n    if (user_id) {\n      axios.get(`http://localhost:5000/api/currentUser/${user_id}`).then(res => setCurrentUser(res.data)).catch(err => console.error(\"Error fetching current user:\", err));\n    }\n  }, [user_id]);\n  useEffect(() => {\n    if (!currentUser || !selectedUser) return;\n    axios.get(`http://localhost:5000/api/messages/${currentUser.id}/${selectedUser.id}`).then(res => setMessages(res.data)).catch(err => console.error(\"Error fetching messages:\", err));\n  }, [currentUser, selectedUser]);\n  useEffect(() => {\n    if (!currentUser) return;\n    socket.on(`receiveMessage:${currentUser.id}`, message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => socket.off(`receiveMessage:${currentUser.id}`);\n  }, [currentUser]);\n  const selectUser = user => {\n    setSelectedUser(user);\n  };\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !currentUser || !selectedUser) return;\n    const messageData = {\n      senderId: currentUser.id,\n      receiverId: selectedUser.id,\n      message: newMessage\n    };\n    try {\n      await axios.post(\"http://localhost:5000/api/messages\", messageData);\n      socket.emit(\"sendMessage\", messageData);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"active\" : \"\"}`,\n        onClick: () => selectUser(user),\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender_id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) ? \"sent\" : \"received\"}`,\n            children: msg.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a user to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesPage, \"VUDGuVN2ey6tFY14GIa7UOitww4=\", false, function () {\n  return [useParams];\n});\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","MessagesPage","_s","user_id","users","setUsers","currentUser","setCurrentUser","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","get","then","res","data","catch","err","console","error","id","on","message","prev","off","selectUser","user","sendMessage","trim","messageData","senderId","receiverId","post","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","msg","index","sender_id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/tarun/project/frontend/src/pages/MessagesPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"../styles/messages.css\";\n\nconst socket = io(\"http://localhost:5000\");\n\nconst MessagesPage = () => {\n  const { user_id } = useParams();\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (user_id) {\n      axios.get(`http://localhost:5000/api/users/${user_id}`)\n        .then((res) => setUsers(res.data))\n        .catch((err) => console.error(\"Error fetching users:\", err));\n    }\n  }, [user_id]);\n\n  useEffect(() => {\n    if (user_id) {\n      axios.get(`http://localhost:5000/api/currentUser/${user_id}`)\n        .then((res) => setCurrentUser(res.data))\n        .catch((err) => console.error(\"Error fetching current user:\", err));\n    }\n  }, [user_id]);\n\n  useEffect(() => {\n    if (!currentUser || !selectedUser) return;\n\n    axios.get(`http://localhost:5000/api/messages/${currentUser.id}/${selectedUser.id}`)\n      .then((res) => setMessages(res.data))\n      .catch((err) => console.error(\"Error fetching messages:\", err));\n  }, [currentUser, selectedUser]);\n\n  useEffect(() => {\n    if (!currentUser) return;\n\n    socket.on(`receiveMessage:${currentUser.id}`, (message) => {\n      setMessages((prev) => [...prev, message]);\n    });\n\n    return () => socket.off(`receiveMessage:${currentUser.id}`);\n  }, [currentUser]);\n\n  const selectUser = (user) => {\n    setSelectedUser(user);\n  };\n\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !currentUser || !selectedUser) return;\n\n    const messageData = {\n      senderId: currentUser.id,\n      receiverId: selectedUser.id,\n      message: newMessage,\n    };\n\n    try {\n      await axios.post(\"http://localhost:5000/api/messages\", messageData);\n      socket.emit(\"sendMessage\", messageData);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"user-list\">\n        <h3>Users</h3>\n        {users.map((user) => (\n          <div\n            key={user.id}\n            className={`user ${selectedUser?.id === user.id ? \"active\" : \"\"}`}\n            onClick={() => selectUser(user)}\n          >\n            {user.name}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat-box\">\n        {selectedUser ? (\n          <>\n            <h3>Chat with {selectedUser.name}</h3>\n            <div className=\"messages\">\n              {messages.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`message ${\n                    msg.sender_id === currentUser?.id ? \"sent\" : \"received\"\n                  }`}\n                >\n                  {msg.message}\n                </div>\n              ))}\n            </div>\n            <div className=\"input-box\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Type a message...\"\n              />\n              <button onClick={sendMessage}>Send</button>\n            </div>\n          </>\n        ) : (\n          <h3>Select a user to chat</h3>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}