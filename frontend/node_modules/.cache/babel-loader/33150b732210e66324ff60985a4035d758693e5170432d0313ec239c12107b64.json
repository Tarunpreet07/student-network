{"ast":null,"code":"var _jsxFileName = \"/home/tarun/project/frontend/src/pages/MessagesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"../styles/messages.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst MessagesPage = () => {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (user_id) {\n      axios.get(`http://localhost:5000/api/users/${user_id}`).then(res => setUsers(res.data)).catch(err => console.error(\"Error fetching users:\", err));\n      axios.get(`http://localhost:5000/api/currentUser/${user_id}`).then(res => setCurrentUser(res.data)).catch(err => console.error(\"Error fetching current user:\", err));\n    }\n  }, [user_id]);\n  useEffect(() => {\n    if (!currentUser || !selectedUser) return;\n    axios.get(`http://localhost:5000/api/messages/${currentUser.id}/${selectedUser.id}`).then(res => setMessages(res.data)).catch(err => console.error(\"Error fetching messages:\", err));\n  }, [currentUser, selectedUser]);\n  useEffect(() => {\n    if (!currentUser) return;\n    const listener = `receiveMessage:${currentUser.id}`;\n    socket.on(listener, message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => socket.off(listener);\n  }, [currentUser]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const selectUser = user => {\n    setSelectedUser(user);\n  };\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !currentUser || !selectedUser) return;\n    const messageData = {\n      senderId: currentUser.id,\n      receiverId: selectedUser.id,\n      message: newMessage\n    };\n    try {\n      await axios.post(\"http://localhost:5000/api/messages\", messageData);\n      socket.emit(\"sendMessage\", messageData);\n      setMessages(prev => [...prev, {\n        ...messageData,\n        sender_id: currentUser.id\n      }]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"active\" : \"\"}`,\n        onClick: () => selectUser(user),\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender_id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) ? \"sent\" : \"received\"}`,\n            children: msg.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            onKeyDown: e => e.key === \"Enter\" && sendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a user to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesPage, \"QAtTanZyhY2vl/MrEUbqrc15xZI=\", false, function () {\n  return [useParams];\n});\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","MessagesPage","_s","user_id","users","setUsers","currentUser","setCurrentUser","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","messagesEndRef","get","then","res","data","catch","err","console","error","id","listener","on","message","prev","off","_messagesEndRef$curre","current","scrollIntoView","behavior","selectUser","user","sendMessage","trim","messageData","senderId","receiverId","post","emit","sender_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","msg","index","ref","type","value","onChange","e","target","placeholder","onKeyDown","key","_c","$RefreshReg$"],"sources":["/home/tarun/project/frontend/src/pages/MessagesPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"../styles/messages.css\";\n\nconst socket = io(\"http://localhost:5000\");\n\nconst MessagesPage = () => {\n  const { user_id } = useParams();\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (user_id) {\n      axios\n        .get(`http://localhost:5000/api/users/${user_id}`)\n        .then((res) => setUsers(res.data))\n        .catch((err) => console.error(\"Error fetching users:\", err));\n\n      axios\n        .get(`http://localhost:5000/api/currentUser/${user_id}`)\n        .then((res) => setCurrentUser(res.data))\n        .catch((err) => console.error(\"Error fetching current user:\", err));\n    }\n  }, [user_id]);\n\n  useEffect(() => {\n    if (!currentUser || !selectedUser) return;\n\n    axios\n      .get(\n        `http://localhost:5000/api/messages/${currentUser.id}/${selectedUser.id}`\n      )\n      .then((res) => setMessages(res.data))\n      .catch((err) => console.error(\"Error fetching messages:\", err));\n  }, [currentUser, selectedUser]);\n\n  useEffect(() => {\n    if (!currentUser) return;\n\n    const listener = `receiveMessage:${currentUser.id}`;\n    socket.on(listener, (message) => {\n      setMessages((prev) => [...prev, message]);\n    });\n\n    return () => socket.off(listener);\n  }, [currentUser]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const selectUser = (user) => {\n    setSelectedUser(user);\n  };\n\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !currentUser || !selectedUser) return;\n\n    const messageData = {\n      senderId: currentUser.id,\n      receiverId: selectedUser.id,\n      message: newMessage,\n    };\n\n    try {\n      await axios.post(\"http://localhost:5000/api/messages\", messageData);\n      socket.emit(\"sendMessage\", messageData);\n\n      setMessages((prev) => [\n        ...prev,\n        { ...messageData, sender_id: currentUser.id },\n      ]);\n\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"user-list\">\n        <h3>Users</h3>\n        {users.map((user) => (\n          <div\n            key={user.id}\n            className={`user ${selectedUser?.id === user.id ? \"active\" : \"\"}`}\n            onClick={() => selectUser(user)}\n          >\n            {user.name}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat-box\">\n        {selectedUser ? (\n          <>\n            <h3>Chat with {selectedUser.name}</h3>\n            <div className=\"messages\">\n              {messages.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`message ${\n                    msg.sender_id === currentUser?.id ? \"sent\" : \"received\"\n                  }`}\n                >\n                  {msg.message}\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n\n            <div className=\"input-box\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Type a message...\"\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n              />\n              <button onClick={sendMessage}>Send</button>\n            </div>\n          </>\n        ) : (\n          <h3>Select a user to chat</h3>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,MAAM,GAAGN,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMO,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMuB,cAAc,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAEnCF,SAAS,CAAC,MAAM;IACd,IAAIa,OAAO,EAAE;MACXR,KAAK,CACFoB,GAAG,CAAC,mCAAmCZ,OAAO,EAAE,CAAC,CACjDa,IAAI,CAAEC,GAAG,IAAKZ,QAAQ,CAACY,GAAG,CAACC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;MAE9DzB,KAAK,CACFoB,GAAG,CAAC,yCAAyCZ,OAAO,EAAE,CAAC,CACvDa,IAAI,CAAEC,GAAG,IAAKV,cAAc,CAACU,GAAG,CAACC,IAAI,CAAC,CAAC,CACvCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC,CAAC;IACvE;EACF,CAAC,EAAE,CAACjB,OAAO,CAAC,CAAC;EAEbb,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,WAAW,IAAI,CAACE,YAAY,EAAE;IAEnCb,KAAK,CACFoB,GAAG,CACF,sCAAsCT,WAAW,CAACiB,EAAE,IAAIf,YAAY,CAACe,EAAE,EACzE,CAAC,CACAP,IAAI,CAAEC,GAAG,IAAKN,WAAW,CAACM,GAAG,CAACC,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,CAACd,WAAW,EAAEE,YAAY,CAAC,CAAC;EAE/BlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,WAAW,EAAE;IAElB,MAAMkB,QAAQ,GAAG,kBAAkBlB,WAAW,CAACiB,EAAE,EAAE;IACnDvB,MAAM,CAACyB,EAAE,CAACD,QAAQ,EAAGE,OAAO,IAAK;MAC/Bf,WAAW,CAAEgB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEF,OAAO,MAAM1B,MAAM,CAAC4B,GAAG,CAACJ,QAAQ,CAAC;EACnC,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjBhB,SAAS,CAAC,MAAM;IAAA,IAAAuC,qBAAA;IACd,CAAAA,qBAAA,GAAAf,cAAc,CAACgB,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACtB,QAAQ,CAAC,CAAC;EAEd,MAAMuB,UAAU,GAAIC,IAAI,IAAK;IAC3BzB,eAAe,CAACyB,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACvB,UAAU,CAACwB,IAAI,CAAC,CAAC,IAAI,CAAC9B,WAAW,IAAI,CAACE,YAAY,EAAE;IAEzD,MAAM6B,WAAW,GAAG;MAClBC,QAAQ,EAAEhC,WAAW,CAACiB,EAAE;MACxBgB,UAAU,EAAE/B,YAAY,CAACe,EAAE;MAC3BG,OAAO,EAAEd;IACX,CAAC;IAED,IAAI;MACF,MAAMjB,KAAK,CAAC6C,IAAI,CAAC,oCAAoC,EAAEH,WAAW,CAAC;MACnErC,MAAM,CAACyC,IAAI,CAAC,aAAa,EAAEJ,WAAW,CAAC;MAEvC1B,WAAW,CAAEgB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAE,GAAGU,WAAW;QAAEK,SAAS,EAAEpC,WAAW,CAACiB;MAAG,CAAC,CAC9C,CAAC;MAEFV,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,oBACEvB,OAAA;IAAK8C,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/C,OAAA;MAAK8C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB/C,OAAA;QAAA+C,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACb5C,KAAK,CAAC6C,GAAG,CAAEf,IAAI,iBACdrC,OAAA;QAEE8C,SAAS,EAAE,QAAQ,CAAAnC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEe,EAAE,MAAKW,IAAI,CAACX,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;QAClE2B,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACC,IAAI,CAAE;QAAAU,QAAA,EAE/BV,IAAI,CAACiB;MAAI,GAJLjB,IAAI,CAACX,EAAE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnD,OAAA;MAAK8C,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBpC,YAAY,gBACXX,OAAA,CAAAE,SAAA;QAAA6C,QAAA,gBACE/C,OAAA;UAAA+C,QAAA,GAAI,YAAU,EAACpC,YAAY,CAAC2C,IAAI;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCnD,OAAA;UAAK8C,SAAS,EAAC,UAAU;UAAAC,QAAA,GACtBlC,QAAQ,CAACuC,GAAG,CAAC,CAACG,GAAG,EAAEC,KAAK,kBACvBxD,OAAA;YAEE8C,SAAS,EAAE,WACTS,GAAG,CAACV,SAAS,MAAKpC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,EAAE,IAAG,MAAM,GAAG,UAAU,EACtD;YAAAqB,QAAA,EAEFQ,GAAG,CAAC1B;UAAO,GALP2B,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMP,CACN,CAAC,eACFnD,OAAA;YAAKyD,GAAG,EAAExC;UAAe;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eAENnD,OAAA;UAAK8C,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB/C,OAAA;YACE0D,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE5C,UAAW;YAClB6C,QAAQ,EAAGC,CAAC,IAAK7C,aAAa,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,WAAW,EAAC,mBAAmB;YAC/BC,SAAS,EAAGH,CAAC,IAAKA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAI3B,WAAW,CAAC;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACFnD,OAAA;YAAQqD,OAAO,EAAEf,WAAY;YAAAS,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA,eACN,CAAC,gBAEHnD,OAAA;QAAA+C,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC9B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA/HID,YAAY;EAAA,QACIR,SAAS;AAAA;AAAAsE,EAAA,GADzB9D,YAAY;AAiIlB,eAAeA,YAAY;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}